// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  firstname    String
  surname      String
  phoneNumber  String   @unique
  email        String   @unique
  password     String
  refreshToken String?
  createdBy    String?
  createdDate  DateTime @default(now())
  modifiedBy   String?
  modifiedDate DateTime @updatedAt

  role    Role
  version Int?

  @@unique([phoneNumber, email])
}

enum Role {
  SUPER_ADMIN
  SUPPORT
  STAFF
}

model Organization {
  id          String  @id @default(uuid())
  orgName     String  @unique
  orgWebsite  String  @unique
  orgEmail    String  @unique
  orgNumber   String  @unique
  orgAddress  String
  orgAddress2 String?
  orgState    String
  orgCountry  String
  orgRCnumber String  @unique
  orgIndustry String

  employees  Employee[]
  leavePlan  Leave[]
  createdBy  String?
  modifiedBy String?

  createdDate  DateTime @default(now())
  modifiedDate DateTime @updatedAt

  @@unique([orgName, orgWebsite, orgEmail, orgNumber, orgRCnumber])
}

enum Employee_Role {
  MANAGEMENT
  HUMAN_RESOURCE
  FINANCE
  REGULAR
}

model Employee {
  id           String  @id @default(uuid())
  email        String  @unique
  password     String
  firstname    String
  lastname     String
  idNumber     String  @unique
  phoneNumber  String  @unique
  refreshToken String?

  role             Employee_Role[]
  employeeLeave    EmployeeLeave[]
  leaveApplication LeaveApplication[]

  organizationId String
  Organization   Organization @relation(fields: [organizationId], references: [id])

  createdBy    String?
  modifiedBy   String?
  createdDate  DateTime @default(now())
  modifiedDate DateTime @updatedAt

  @@unique([email, idNumber, phoneNumber])
}

model Leave {
  id       String @id @default(uuid())
  name     String
  duration Int

  employeeLeave    EmployeeLeave[]
  leaveApplication LeaveApplication[]

  Organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String

  createdBy   String?
  createdDate DateTime @default(now())
}

model EmployeeLeave {
  id                String @id @default(uuid())
  remainingDuration Int
  leaveName         String

  employeeId String
  employee   Employee @relation(fields: [employeeId], references: [id])

  leaveId String
  leave   Leave  @relation(fields: [leaveId], references: [id])

  @@unique([employeeId, leaveId])
}

model LeaveApplication {
  id String @id @default(uuid())

  startDate DateTime
  endDate   DateTime
  duration  Int
  leaveName String

  employeeId String
  employee   Employee @relation(fields: [employeeId], references: [id])

  leaveId String
  leave   Leave  @relation(fields: [leaveId], references: [id])

  @@unique([employeeId, leaveId])
}
